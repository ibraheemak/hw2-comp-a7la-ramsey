Terminals unused in grammar

    COMMA


Grammar

    0 $accept: Program $end

    1 Program: M1 Statements

    2 M1: %empty

    3 Statements: Statement
    4           | Statements Statement

    5 Statement: LBRACE M_NEW_SCOPE Statements RBRACE
    6          | Type ID SC
    7          | Type ID ASSIGN Exp SC
    8          | ID ASSIGN Exp SC
    9          | Call SC
   10          | RETURN SC
   11          | IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   13          | WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   14          | BREAK SC
   15          | CONTINUE SC

   16 M_NEW_SCOPE: %empty

   17 M_NEW_SCOPE_LOOP: %empty

   18 Call: ID LPAREN Exp RPAREN

   19 Type: INT
   20     | BYTE
   21     | BOOL

   22 Exp: LPAREN Exp RPAREN
   23    | Exp additive Exp
   24    | Exp multiplicative Exp
   25    | ID
   26    | Call
   27    | NUM
   28    | NUM B
   29    | STRING
   30    | TRUE
   31    | FALSE
   32    | NOT Exp
   33    | Exp AND Exp
   34    | Exp OR Exp
   35    | Exp equality Exp
   36    | Exp relational Exp
   37    | LPAREN Type RPAREN Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT (258) 19
    BYTE (259) 20
    B (260) 28
    BOOL (261) 21
    TRUE (262) 30
    FALSE (263) 31
    RETURN (264) 10
    IF (265) 11 12
    WHILE (266) 13
    BREAK (267) 14
    CONTINUE (268) 15
    SC (269) 6 7 8 9 10 14 15
    LBRACE (270) 5
    RBRACE (271) 5
    ID (272) 6 7 8 18 25
    NUM (273) 27 28
    STRING (274) 29
    ASSIGN (275) 7 8
    OR (276) 34
    AND (277) 33
    equality (278) 35
    relational (279) 36
    additive (280) 23
    multiplicative (281) 24
    NOT (282) 32
    LPAREN (283) 11 12 13 18 22 37
    RPAREN (284) 11 12 13 18 22 37
    ELSE (285) 12
    COMMA (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    Program (33)
        on left: 1
        on right: 0
    M1 (34)
        on left: 2
        on right: 1
    Statements (35)
        on left: 3 4
        on right: 1 4 5
    Statement (36)
        on left: 5 6 7 8 9 10 11 12 13 14 15
        on right: 3 4 11 12 13
    M_NEW_SCOPE (37)
        on left: 16
        on right: 5 11 12
    M_NEW_SCOPE_LOOP (38)
        on left: 17
        on right: 13
    Call (39)
        on left: 18
        on right: 9 26
    Type (40)
        on left: 19 20 21
        on right: 6 7 37
    Exp (41)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 7 8 11 12 13 18 22 23 24 32 33 34 35 36 37


State 0

    0 $accept: • Program $end
    1 Program: • M1 Statements
    2 M1: • %empty

    $default  reduce using rule 2 (M1)

    Program  go to state 1
    M1       go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    1 Program: M1 • Statements
    3 Statements: • Statement
    4           | • Statements Statement
    5 Statement: • LBRACE M_NEW_SCOPE Statements RBRACE
    6          | • Type ID SC
    7          | • Type ID ASSIGN Exp SC
    8          | • ID ASSIGN Exp SC
    9          | • Call SC
   10          | • RETURN SC
   11          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   13          | • WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   14          | • BREAK SC
   15          | • CONTINUE SC
   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL

    INT       shift, and go to state 4
    BYTE      shift, and go to state 5
    BOOL      shift, and go to state 6
    RETURN    shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    BREAK     shift, and go to state 10
    CONTINUE  shift, and go to state 11
    LBRACE    shift, and go to state 12
    ID        shift, and go to state 13

    Statements  go to state 14
    Statement   go to state 15
    Call        go to state 16
    Type        go to state 17


State 3

    0 $accept: Program $end •

    $default  accept


State 4

   19 Type: INT •

    $default  reduce using rule 19 (Type)


State 5

   20 Type: BYTE •

    $default  reduce using rule 20 (Type)


State 6

   21 Type: BOOL •

    $default  reduce using rule 21 (Type)


State 7

   10 Statement: RETURN • SC

    SC  shift, and go to state 18


State 8

   11 Statement: IF • LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | IF • LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement

    LPAREN  shift, and go to state 19


State 9

   13 Statement: WHILE • LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement

    LPAREN  shift, and go to state 20


State 10

   14 Statement: BREAK • SC

    SC  shift, and go to state 21


State 11

   15 Statement: CONTINUE • SC

    SC  shift, and go to state 22


State 12

    5 Statement: LBRACE • M_NEW_SCOPE Statements RBRACE
   16 M_NEW_SCOPE: • %empty

    $default  reduce using rule 16 (M_NEW_SCOPE)

    M_NEW_SCOPE  go to state 23


State 13

    8 Statement: ID • ASSIGN Exp SC
   18 Call: ID • LPAREN Exp RPAREN

    ASSIGN  shift, and go to state 24
    LPAREN  shift, and go to state 25


State 14

    1 Program: M1 Statements •
    4 Statements: Statements • Statement
    5 Statement: • LBRACE M_NEW_SCOPE Statements RBRACE
    6          | • Type ID SC
    7          | • Type ID ASSIGN Exp SC
    8          | • ID ASSIGN Exp SC
    9          | • Call SC
   10          | • RETURN SC
   11          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   13          | • WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   14          | • BREAK SC
   15          | • CONTINUE SC
   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL

    INT       shift, and go to state 4
    BYTE      shift, and go to state 5
    BOOL      shift, and go to state 6
    RETURN    shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    BREAK     shift, and go to state 10
    CONTINUE  shift, and go to state 11
    LBRACE    shift, and go to state 12
    ID        shift, and go to state 13

    $default  reduce using rule 1 (Program)

    Statement  go to state 26
    Call       go to state 16
    Type       go to state 17


State 15

    3 Statements: Statement •

    $default  reduce using rule 3 (Statements)


State 16

    9 Statement: Call • SC

    SC  shift, and go to state 27


State 17

    6 Statement: Type • ID SC
    7          | Type • ID ASSIGN Exp SC

    ID  shift, and go to state 28


State 18

   10 Statement: RETURN SC •

    $default  reduce using rule 10 (Statement)


State 19

   11 Statement: IF LPAREN • Exp RPAREN M_NEW_SCOPE Statement
   12          | IF LPAREN • Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 37


State 20

   13 Statement: WHILE LPAREN • Exp RPAREN M_NEW_SCOPE_LOOP Statement
   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 38


State 21

   14 Statement: BREAK SC •

    $default  reduce using rule 14 (Statement)


State 22

   15 Statement: CONTINUE SC •

    $default  reduce using rule 15 (Statement)


State 23

    3 Statements: • Statement
    4           | • Statements Statement
    5 Statement: • LBRACE M_NEW_SCOPE Statements RBRACE
    5          | LBRACE M_NEW_SCOPE • Statements RBRACE
    6          | • Type ID SC
    7          | • Type ID ASSIGN Exp SC
    8          | • ID ASSIGN Exp SC
    9          | • Call SC
   10          | • RETURN SC
   11          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   13          | • WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   14          | • BREAK SC
   15          | • CONTINUE SC
   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL

    INT       shift, and go to state 4
    BYTE      shift, and go to state 5
    BOOL      shift, and go to state 6
    RETURN    shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    BREAK     shift, and go to state 10
    CONTINUE  shift, and go to state 11
    LBRACE    shift, and go to state 12
    ID        shift, and go to state 13

    Statements  go to state 39
    Statement   go to state 15
    Call        go to state 16
    Type        go to state 17


State 24

    8 Statement: ID ASSIGN • Exp SC
   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 40


State 25

   18 Call: • ID LPAREN Exp RPAREN
   18     | ID LPAREN • Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 41


State 26

    4 Statements: Statements Statement •

    $default  reduce using rule 4 (Statements)


State 27

    9 Statement: Call SC •

    $default  reduce using rule 9 (Statement)


State 28

    6 Statement: Type ID • SC
    7          | Type ID • ASSIGN Exp SC

    SC      shift, and go to state 42
    ASSIGN  shift, and go to state 43


State 29

   30 Exp: TRUE •

    $default  reduce using rule 30 (Exp)


State 30

   31 Exp: FALSE •

    $default  reduce using rule 31 (Exp)


State 31

   18 Call: ID • LPAREN Exp RPAREN
   25 Exp: ID •

    LPAREN  shift, and go to state 25

    $default  reduce using rule 25 (Exp)


State 32

   27 Exp: NUM •
   28    | NUM • B

    B  shift, and go to state 44

    $default  reduce using rule 27 (Exp)


State 33

   29 Exp: STRING •

    $default  reduce using rule 29 (Exp)


State 34

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   32    | NOT • Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 45


State 35

   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL
   22 Exp: • LPAREN Exp RPAREN
   22    | LPAREN • Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp
   37    | LPAREN • Type RPAREN Exp

    INT     shift, and go to state 4
    BYTE    shift, and go to state 5
    BOOL    shift, and go to state 6
    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Type  go to state 46
    Exp   go to state 47


State 36

   26 Exp: Call •

    $default  reduce using rule 26 (Exp)


State 37

   11 Statement: IF LPAREN Exp • RPAREN M_NEW_SCOPE Statement
   12          | IF LPAREN Exp • RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    OR              shift, and go to state 48
    AND             shift, and go to state 49
    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53
    RPAREN          shift, and go to state 54


State 38

   13 Statement: WHILE LPAREN Exp • RPAREN M_NEW_SCOPE_LOOP Statement
   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    OR              shift, and go to state 48
    AND             shift, and go to state 49
    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53
    RPAREN          shift, and go to state 55


State 39

    4 Statements: Statements • Statement
    5 Statement: • LBRACE M_NEW_SCOPE Statements RBRACE
    5          | LBRACE M_NEW_SCOPE Statements • RBRACE
    6          | • Type ID SC
    7          | • Type ID ASSIGN Exp SC
    8          | • ID ASSIGN Exp SC
    9          | • Call SC
   10          | • RETURN SC
   11          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   13          | • WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   14          | • BREAK SC
   15          | • CONTINUE SC
   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL

    INT       shift, and go to state 4
    BYTE      shift, and go to state 5
    BOOL      shift, and go to state 6
    RETURN    shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    BREAK     shift, and go to state 10
    CONTINUE  shift, and go to state 11
    LBRACE    shift, and go to state 12
    RBRACE    shift, and go to state 56
    ID        shift, and go to state 13

    Statement  go to state 26
    Call       go to state 16
    Type       go to state 17


State 40

    8 Statement: ID ASSIGN Exp • SC
   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    SC              shift, and go to state 57
    OR              shift, and go to state 48
    AND             shift, and go to state 49
    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53


State 41

   18 Call: ID LPAREN Exp • RPAREN
   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    OR              shift, and go to state 48
    AND             shift, and go to state 49
    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53
    RPAREN          shift, and go to state 58


State 42

    6 Statement: Type ID SC •

    $default  reduce using rule 6 (Statement)


State 43

    7 Statement: Type ID ASSIGN • Exp SC
   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 59


State 44

   28 Exp: NUM B •

    $default  reduce using rule 28 (Exp)


State 45

   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   32    | NOT Exp •
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    $default  reduce using rule 32 (Exp)


State 46

   37 Exp: LPAREN Type • RPAREN Exp

    RPAREN  shift, and go to state 60


State 47

   22 Exp: LPAREN Exp • RPAREN
   23    | Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    OR              shift, and go to state 48
    AND             shift, and go to state 49
    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53
    RPAREN          shift, and go to state 61


State 48

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   34    | Exp OR • Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 62


State 49

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   33    | Exp AND • Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 63


State 50

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   35    | Exp equality • Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 64


State 51

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   36    | Exp relational • Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 65


State 52

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   23    | Exp additive • Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 66


State 53

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   24    | Exp multiplicative • Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 67


State 54

   11 Statement: IF LPAREN Exp RPAREN • M_NEW_SCOPE Statement
   12          | IF LPAREN Exp RPAREN • M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   16 M_NEW_SCOPE: • %empty

    $default  reduce using rule 16 (M_NEW_SCOPE)

    M_NEW_SCOPE  go to state 68


State 55

   13 Statement: WHILE LPAREN Exp RPAREN • M_NEW_SCOPE_LOOP Statement
   17 M_NEW_SCOPE_LOOP: • %empty

    $default  reduce using rule 17 (M_NEW_SCOPE_LOOP)

    M_NEW_SCOPE_LOOP  go to state 69


State 56

    5 Statement: LBRACE M_NEW_SCOPE Statements RBRACE •

    $default  reduce using rule 5 (Statement)


State 57

    8 Statement: ID ASSIGN Exp SC •

    $default  reduce using rule 8 (Statement)


State 58

   18 Call: ID LPAREN Exp RPAREN •

    $default  reduce using rule 18 (Call)


State 59

    7 Statement: Type ID ASSIGN Exp • SC
   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    SC              shift, and go to state 70
    OR              shift, and go to state 48
    AND             shift, and go to state 49
    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53


State 60

   18 Call: • ID LPAREN Exp RPAREN
   22 Exp: • LPAREN Exp RPAREN
   23    | • Exp additive Exp
   24    | • Exp multiplicative Exp
   25    | • ID
   26    | • Call
   27    | • NUM
   28    | • NUM B
   29    | • STRING
   30    | • TRUE
   31    | • FALSE
   32    | • NOT Exp
   33    | • Exp AND Exp
   34    | • Exp OR Exp
   35    | • Exp equality Exp
   36    | • Exp relational Exp
   37    | • LPAREN Type RPAREN Exp
   37    | LPAREN Type RPAREN • Exp

    TRUE    shift, and go to state 29
    FALSE   shift, and go to state 30
    ID      shift, and go to state 31
    NUM     shift, and go to state 32
    STRING  shift, and go to state 33
    NOT     shift, and go to state 34
    LPAREN  shift, and go to state 35

    Call  go to state 36
    Exp   go to state 71


State 61

   22 Exp: LPAREN Exp RPAREN •

    $default  reduce using rule 22 (Exp)


State 62

   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   34    | Exp OR Exp •
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    AND             shift, and go to state 49
    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53

    $default  reduce using rule 34 (Exp)


State 63

   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   33    | Exp AND Exp •
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    equality        shift, and go to state 50
    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53

    $default  reduce using rule 33 (Exp)


State 64

   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   35    | Exp equality Exp •
   36    | Exp • relational Exp

    relational      shift, and go to state 51
    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53

    $default  reduce using rule 35 (Exp)


State 65

   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp
   36    | Exp relational Exp •

    additive        shift, and go to state 52
    multiplicative  shift, and go to state 53

    $default  reduce using rule 36 (Exp)


State 66

   23 Exp: Exp • additive Exp
   23    | Exp additive Exp •
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    multiplicative  shift, and go to state 53

    $default  reduce using rule 23 (Exp)


State 67

   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   24    | Exp multiplicative Exp •
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp

    $default  reduce using rule 24 (Exp)


State 68

    5 Statement: • LBRACE M_NEW_SCOPE Statements RBRACE
    6          | • Type ID SC
    7          | • Type ID ASSIGN Exp SC
    8          | • ID ASSIGN Exp SC
    9          | • Call SC
   10          | • RETURN SC
   11          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   11          | IF LPAREN Exp RPAREN M_NEW_SCOPE • Statement
   12          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   12          | IF LPAREN Exp RPAREN M_NEW_SCOPE • Statement ELSE M_NEW_SCOPE Statement
   13          | • WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   14          | • BREAK SC
   15          | • CONTINUE SC
   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL

    INT       shift, and go to state 4
    BYTE      shift, and go to state 5
    BOOL      shift, and go to state 6
    RETURN    shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    BREAK     shift, and go to state 10
    CONTINUE  shift, and go to state 11
    LBRACE    shift, and go to state 12
    ID        shift, and go to state 13

    Statement  go to state 72
    Call       go to state 16
    Type       go to state 17


State 69

    5 Statement: • LBRACE M_NEW_SCOPE Statements RBRACE
    6          | • Type ID SC
    7          | • Type ID ASSIGN Exp SC
    8          | • ID ASSIGN Exp SC
    9          | • Call SC
   10          | • RETURN SC
   11          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   13          | • WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   13          | WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP • Statement
   14          | • BREAK SC
   15          | • CONTINUE SC
   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL

    INT       shift, and go to state 4
    BYTE      shift, and go to state 5
    BOOL      shift, and go to state 6
    RETURN    shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    BREAK     shift, and go to state 10
    CONTINUE  shift, and go to state 11
    LBRACE    shift, and go to state 12
    ID        shift, and go to state 13

    Statement  go to state 73
    Call       go to state 16
    Type       go to state 17


State 70

    7 Statement: Type ID ASSIGN Exp SC •

    $default  reduce using rule 7 (Statement)


State 71

   23 Exp: Exp • additive Exp
   24    | Exp • multiplicative Exp
   33    | Exp • AND Exp
   34    | Exp • OR Exp
   35    | Exp • equality Exp
   36    | Exp • relational Exp
   37    | LPAREN Type RPAREN Exp •

    $default  reduce using rule 37 (Exp)


State 72

   11 Statement: IF LPAREN Exp RPAREN M_NEW_SCOPE Statement •
   12          | IF LPAREN Exp RPAREN M_NEW_SCOPE Statement • ELSE M_NEW_SCOPE Statement

    ELSE  shift, and go to state 74

    $default  reduce using rule 11 (Statement)


State 73

   13 Statement: WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement •

    $default  reduce using rule 13 (Statement)


State 74

   12 Statement: IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE • M_NEW_SCOPE Statement
   16 M_NEW_SCOPE: • %empty

    $default  reduce using rule 16 (M_NEW_SCOPE)

    M_NEW_SCOPE  go to state 75


State 75

    5 Statement: • LBRACE M_NEW_SCOPE Statements RBRACE
    6          | • Type ID SC
    7          | • Type ID ASSIGN Exp SC
    8          | • ID ASSIGN Exp SC
    9          | • Call SC
   10          | • RETURN SC
   11          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement
   12          | • IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement
   12          | IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE • Statement
   13          | • WHILE LPAREN Exp RPAREN M_NEW_SCOPE_LOOP Statement
   14          | • BREAK SC
   15          | • CONTINUE SC
   18 Call: • ID LPAREN Exp RPAREN
   19 Type: • INT
   20     | • BYTE
   21     | • BOOL

    INT       shift, and go to state 4
    BYTE      shift, and go to state 5
    BOOL      shift, and go to state 6
    RETURN    shift, and go to state 7
    IF        shift, and go to state 8
    WHILE     shift, and go to state 9
    BREAK     shift, and go to state 10
    CONTINUE  shift, and go to state 11
    LBRACE    shift, and go to state 12
    ID        shift, and go to state 13

    Statement  go to state 76
    Call       go to state 16
    Type       go to state 17


State 76

   12 Statement: IF LPAREN Exp RPAREN M_NEW_SCOPE Statement ELSE M_NEW_SCOPE Statement •

    $default  reduce using rule 12 (Statement)
